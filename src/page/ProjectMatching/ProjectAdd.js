import { React, useState, useEffect } from "react";
import { useNavigate, Navigate } from "react-router-dom";

function ProjectAdd() {
    const navigate = useNavigate();
    const tagList = [
        "JAVA",
        "Spring",
        "C++",
        "JavaScript",
        "C#",
        "C",
        "Python",
        "ÎÉ†ÎÉ†",
        "„ÖÅ„Ñ¥„Öá",
        "Ïö∏ÎûÑÎùº",
        "Ïñ∏Ïñ¥1",
        "Ïñ∏Ïñ¥2",
    ];
    const [isTC, setIsTC] = useState(false);
    const [isTagChecked, setIsTagChecked] = useState([]);
    const [isTagFull, setIsTagFull] = useState(false);
    const [checkedTagList, setCheckedTagList] = useState([]);
    const [tmp, setTmp] = useState(false);

    let tmpDetail =
        "Ï†àÎåÄ Ïû†ÏàòÌÉÄÏßÄ ÏïäÍ≥† ÎÅùÍπåÏßÄ Ï±ÖÏûÑÍ∞ê ÏûàÍ≤å Ìï®Íªò ÏßÄÏÜçÌï¥ÎÇòÍ∞à ÌåÄÏõêÏùÑ Íµ¨Ìï©ÎãàÎã§. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à.  Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à. Ïû†Ïàò ÏÇ¨Ï†à.Ïû†Ïàò ÏÇ¨Ï†à.";
    const onTagButtonClickHandler = (e) => {
        if (e.target.value == "-1") return;
        if (checkedTagList.length >= 3 && isTagChecked[e.target.value] == false) {
            setIsTagFull(true);
            return;
        }
        let t = isTagChecked;
        e.target.checked = true;
        t[e.target.value] = !t[e.target.value];
        setIsTagChecked(t);
        let t_c = checkedTagList;
        if (isTagChecked[e.target.value] == true) {
            t_c.push(e.target.name);
            setCheckedTagList(t_c);
        } else if (isTagChecked[e.target.value] == false) {
            setCheckedTagList(t_c.filter((tagname) => tagname !== e.target.name));
            setIsTagFull(false);
        }
        console.log(checkedTagList);
        setTmp(!tmp);
    };
    const keyPressHandler = (e) => {
        if (e.key === "Enter") {
            navigate("/blog/search");
        }
    };
    useEffect(() => {
        let t = [];
        for (let i = 0; i < tagList.length; i++) {
            t.push(false);
        }
        console.log(t);
        setIsTagChecked(t);
        console.log(isTagChecked);
    }, []);
    return (
        <div class="bg-white w-full font-test">
            <div class="relative w-[60rem] inset-x-1/2 transform -translate-x-1/2">
                <div class="relative my-10">
                    <div class="flex ">
                        <div class="h-12 w-1/2">
                            <div class="flex gap-2 content-center bg-gray-50 rounded-lg border border-slate-300 px-2 py-2 ">
                                <div class="self-center ml-2">üîç</div>
                                <select class="text-gray-400 text-lg appearance-none focus:outline-none bg-transparent">
                                    <option
                                        value="Ï†úÎ™©"
                                        class="hover:bg-gray-100 dark:hover:bg-gray-600 text-center"
                                    >
                                        Ï†úÎ™©
                                    </option>
                                </select>
                                <div class="h-6 my-auto border-l border-gray-300 z-10"></div>
                                {tagList.map((tag, index) => {
                                    if (isTagChecked[index]) {
                                        return (
                                            <div class="flex rounded-lg items-center font-ltest text-bluepurple text-sm bg-develbg px-2">
                                                <div>{tag}</div>
                                                <button
                                                    class="ml-2"
                                                    name={tag}
                                                    value={index}
                                                    onClick={onTagButtonClickHandler}
                                                >
                                                    x
                                                </button>
                                            </div>
                                        );
                                    }
                                })}
                                <input
                                    class="bg-gray-50 grow focus:outline-0 text-gray-500 ml-2"
                                    type="text"
                                    onKeyPress={keyPressHandler}
                                    placeholder={checkedTagList.length == 0 ? "ÏõêÌïòÎäî ÌîÑÎ°úÏ†ùÌä∏Î•º Í≤ÄÏÉâÌï¥ Î≥¥ÏÑ∏Ïöî!" : null}
                                />
                            </div>
                        </div>
                        <div class="flex content-center gap-4 text-lg font-ltest mt-1 h-10 ml-3">
                            <div class="self-center">#</div>
                            {tagList.slice(0, 3).map((tag, index) => {
                                return (
                                    <button
                                        class={
                                            isTagChecked[index] == true
                                                ? "border text-base rounded-lg w-[6rem] bg-develbg border-bluepurple text-bluepurple"
                                                : "border text-md rounded-lg w-[6rem]"
                                        }
                                        name={tag}
                                        value={index}
                                        onClick={onTagButtonClickHandler}
                                    >
                                        {tag}
                                    </button>
                                );
                            })}
                            <select
                                class="border text-md rounded-lg w-[6rem]"
                                onChange={onTagButtonClickHandler}
                            >
                                <option
                                    value="-1"
                                    class="hover:bg-gray-100 dark:hover:bg-gray-600 text-center"
                                >
                                    ÏÑ†ÌÉù
                                </option>
                                {tagList.slice(8, tagList.length).map((tag, index) => {
                                    return (
                                        <option class="text-center" name={tag} value={index + 8}>
                                            {tag}
                                        </option>
                                    );
                                })}
                            </select>
                        </div>
                        {isTagFull ? (
                            <div class="absolute text-sm font-ltest ml-3 mt-2 text-bluepurple">
                                ÌÉúÍ∑∏Îäî ÏµúÎåÄ 3Í∞úÍπåÏßÄ ÏÑ†ÌÉùÌï† Ïàò ÏûàÏäµÎãàÎã§.
                            </div>
                        ) : null}
                    </div>
                    <div class="mt-4 flex">
                        <p>
                            <input class="w-3 h-3" type="checkbox" id="timetable" />{" "}
                            <label class="ml-2" for="timetable">
                                ÏãúÍ∞ÑÌëú Í∏∞Î∞ò
                            </label>
                        </p>
                    </div>
                    <div class="mt-4 text-2xl font-btest">
                        ÏÉà ÌîÑÎ°úÏ†ùÌä∏ ÏÉùÏÑ±ÌïòÍ∏∞
                    </div>
                    <div class="mt-4 border">
                        <input
                            class="w-full py-2 px-3 border bg-gray-50 focus:outline-0 text-lg font-ltest"
                            placeholder="Ï†úÎ™©"
                        />

                    </div>



                </div>
            </div>
        </div>
    );
}

export default ProjectAdd;
